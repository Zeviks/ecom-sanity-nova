legacy peer deps is used to ensure that the correct version of the dependecies that are provided inside of the package.json
are the ones being installed

this is great for tutorials and keeping them fresh for years.

[Sanity Setup]
To begin you need to install the sanity CLI 
From the link here: ----------
Try to use one of the youtube copons for extra bandwith 

Side Note / Pro Tip / 10k commit= When creating a similar project, or a project that contains another node modules folder
go ahead and make sure you remove the "/" from git ignore to make it point at all of the node modules folder.


 
 
3.Login and choose the schema or make a new one.

Now you can use sanity commands to move around 

sanity docs - takes you to the docs page 
sanity mange - takes you to your projects page. 

We then want to go into our sanity studio dir, and run the command 
sanity start - this initilizes the content studio
this is where we add and manage content based on the schemas


Check schema for notes on how to make a schema


When we want to import all of our components with one line 
we simply add an index.js files to the components directory

Then we use 
export { default as NameOfComponent } from "./NameOfComponent";

If any future errors babel related, go back to 35:20





When adding sanity, you will first by adding a "lib" folder

We the create a client.js file 

In this file will will import sanity 
and provide it the proper data 

Such as projectID, dataset, etc.
This is sanity ways of knowing what project is working with.


To find the proper Info, first run sanity mange on the sanity studio folder
Then once you are at the site, go to the dataset tab 

Grab the project id then 
We then grab the name of the dataset and pass it to it.

We then create an api token with editor privilges 

then we save our api token inside on an .env files inside of the sanity studio folder 
This is great for security.

Then once thats done we call the token by doing process.env.NEXT_PUBLIC_SANITY_TOKEN

Also make sure you export the sanityClient and assing it to a variable so it can be used later with ease 

TO enable images we have to the use the sanity image builder and pass it our recently created sanityClient variable



In next when fetching data we use getServerSideProps. This will pre-render this page on each request
Make sure when returning you add the property props 


Once we have our data we can then call does props on our func component 
 To ensure we're recieving the correct data, at a correct format we can console.log the data to ensure its working. 
 We can then pass this data into our components as props and use the proivided data in the component dynamically

 In this case for our banner we want to always render the first element on the array, and we want to also amke sure the array has something in it
 before we try to render.

We can now change the hero banner dynamically whenever we have a sale to a different product



In React whenever you wrap a component with another component. 
You can access the props of the wrapped component on parent componet by passing in the parent as a prop "children"


When we want to create dynamic pages / product pages 
 
We want to first create the product folde inside of the pages folder 

Then inside of thhat folder we create the dynamic page it should look like this 

[slug].js the [] means it dynamic



[getStaticProps] 
will pre-render a page at build time using the props returned 
But in order for this to work you have to use [getStaticPath]

[getStaticPath]
If a page has Dynamic Routes and uses getStaticProps,
it needs to define a list of paths to be statically generated.

When we are loaded into a page that contains dynamic routes, these routes must be present 
This is neccesary for next.js to know any of does routes exist and are critical 

This make sure the links exist before the user has cliked on them, this way whenever the 
user clicked on them, the data will load instanlty

[1:26:00] Reference back for more info for the topics above.




onMounEnter - Used to implement the hover effect on the product pages on ecom site.


marquee - a scrolling list of products / items.


Refer to end of product logic for ideas.


Review onAdd.